#version: '3.8'

services:
  kafka:
    image: bashj79/kafka-kraft
    container_name: kafka_kraft_fhir_rhyperledger
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka/data
    #restart: always

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka_ui_fhir_hyperledger
    ports:
      - "8082:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    volumes:
      - kafka-ui-data:/var/lib/kafka-ui
    #entrypoint: sudo /bin/sh -c "apk add socat && socat tcp-listen:9092,fork tcp:host.docker.internal:9092 && exec /docker-entrypoint.sh"
    depends_on:
      - kafka
  #  restart: always

  fhir-hl7-provider:
    build: ./FHIRHl7Kafka/FHIRHl7KafkaProvider/
    container_name: fhir-hl7-provider
    ports:
      - "8083:8083"
    #environment:
    #  - SPRING_PROFILES_ACTIVE=dev  # Optional Spring profile
    #restart: unless-stopped  
    depends_on:
      - kafka    

  fhir-hl7-consumer:
    build: ./FHIRHl7Kafka/FHIRHl7KafkaConsumer/
    container_name: fhir-hl7-consumer
    ports:
      - "8081:8083"
    #environment:
    #  - SPRING_PROFILES_ACTIVE=dev  # Optional Spring profile
    #restart: unless-stopped  
    depends_on:
      - kafka

volumes:
  kafka-data:
  kafka-ui-data:  

    #docker-compose up -d
    #docker-compose start
    #docker-compose stop
    #docker-compose down

    #docker exec -it kafka_kraft_fhir_rhyperledger /bin/bash
    #cd /opt/kafka/bin

    # create topic 'my-first-topic'
    #sh kafka-topics.sh --bootstrap-server localhost:9092 --create --topic my-first-topic --partitions 1 --replication-factor 1

    # list topics
    #sh kafka-topics.sh --bootstrap-server localhost:9092 --list

    # send messages to the topic
    #sh kafka-console-producer.sh --bootstrap-server localhost:9092 --topic my-first-topic
    #>Hello World
    #>The weather is fine
    #>I love Kafka

    ## Connect to the container's bash (find out the name with 'docker ps')
    #docker exec -it --user=root <name-of-kafka-ui-container> /bin/sh
    #docker exec -it --user=root kafka_ui_fhir_hyperledger /bin/sh 
    # Now, we are connected to the container's bash.
    # Let's install 'socat'
    # apk add socat
    # Use socat to create the port forwarding
    # socat tcp-listen:9092,fork tcp:host.docker.internal:9092
    # This will lead to a running process that we don't kill as long as the container's running