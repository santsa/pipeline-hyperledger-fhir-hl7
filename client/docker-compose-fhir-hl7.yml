networks:
  fabric_test:
    external: true

services:
  kafka:
    image: bashj79/kafka-kraft
    container_name: kafka_kraft_hl7_fhir
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092      
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - fabric_test

#  fhir-hl7-consumer:
#    build: ./FHIRHl7Kafka/FHIRHl7KafkaConsumer/
#    container_name: fhir-hl7-consumer
#    ports:
#      - "8081:8080"
#    environment:
#      - FABRIC_CRYPTO_PATH=/app/organizations/peerOrganizations/org1.hl7-fhir
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    volumes:
#      - ../organizations/peerOrganizations:/app/organizations/peerOrganizations:ro
#    depends_on:
#      - kafka
#    networks:
#      - fabric_test
#
#  fhir-hl7-provider:
#    build: ./FHIRHl7Kafka/FHIRHl7KafkaProvider/
#    container_name: fhir-hl7-provider
#    ports:
#      - "8083:8080"
#    environment:
#      - SPRING_PROFILES_ACTIVE=dev # Optional Spring profile
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    depends_on:
#      - kafka
#    networks:
#      - fabric_test

volumes:
  kafka-data:
  kafka-ui-data:

    #docker-compose up -d
    #docker-compose start
    #docker-compose stop
    #docker-compose down

    #docker exec -it kafka_kraft_hl7_fhir /bin/bash
    #cd /opt/kafka/bin

    # create topic 'my-first-topic'
    #sh kafka-topics.sh --bootstrap-server localhost:9092 --create --topic my-first-topic --partitions 1 --replication-factor 1

    # list topics
    #sh kafka-topics.sh --bootstrap-server localhost:9092 --list

    # send messages to the topic
    #sh kafka-console-producer.sh --bootstrap-server localhost:9092 --topic my-first-topic
    #>Hello World
    #>The weather is fine
    #>I love Kafka

    ## Connect to the container's bash (find out the name with 'docker ps')
    #docker exec -it --user=root <name-of-kafka-ui-container> /bin/sh
    #docker exec -it --user=root kafka_ui_hl7_fhir /bin/sh
    # Now, we are connected to the container's bash.
    # Let's install 'socat'
    # apk add socat
    # Use socat to create the port forwarding
    # socat tcp-listen:9092,fork tcp:host.docker.internal:9092
    # This will lead to a running process that we don't kill as long as the container's running
